 ------
 Overlap dependencies of the maven libraries
 ------
 Dmitry Samoshin aka gotty
 ------
 2015-10-25
 ------

~~ Copyright (c) 2015. Developed by HedgeCode.
~~
~~ Licensed under the Apache License, Version 2.0 (the "License");
~~ you may not use this file except in compliance with the License.
~~ You may obtain a copy of the License at
~~
~~   http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing, software
~~ distributed under the License is distributed on an "AS IS" BASIS,
~~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~~ See the License for the specific language governing permissions and
~~ limitations under the License.

~~ NOTE: For help with the syntax of this file, see:
~~ http://maven.apache.org/doxia/references/apt-format.html

Overlap dependencies of the maven libraries

  Represent the situation where your project is using some library
  from the maven repository, having a stable build number and inclusion
  of standard way in <<<pom.xml>>> through dependencies.
  And at some point comes the need to validate of the build
  and execution of your project with a newer version
  the same library (e.g. <<<SNAPSHOT>>>-version), but which,
  for some reason, there isn't still available in the maven repository.

  In this case the described plugin provides possibility to
  put a new version of the library into the project
  (e.g. in the <<<lib/>>> directory) and with the <<<overlapDependencyMatch>>>
  parameter configuration check the build with this version of the library,
  without changing the global structure of dependencies of your project.
  The plugin simply redefine the dependency for further compilation
  found the coincidence of libraries.

  Example all the above is as follows (assuming that we will use
  the new test version <<<foo-1.1-SNAPSHOT.jar>>> instead of the
  stable maven repository library <<<foo-1.0.jar>>> during the build):

+-------
<project>
    ...
    <dependencies>
        ...
        <dependency>
            <artifactId>foo</artifactId>
            <version>1.0</version>
        </dependency>
        ...
    </dependencies>
    ...
    <build>
        ...
        <plugins>
            <plugin>
                <groupId>${project.groupId}</groupId>
                <artifactId>${project.artifactId}</artifactId>
                <version>${project.version}</version>
                <configuration>
                    <path>lib/foo-1.1-SNAPSHOT.jar</path>
                    <isMask>false</isMask>
                    <overlapDependencyMatch>true</overlapDependencyMatch>
                </configuration>
            </plugin>
        </plugins>
        ...
    </build>
    ...
</project>
+-------